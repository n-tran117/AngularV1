{"ast":null,"code":"import { MatSort } from '@angular/material/sort';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../../services/transaction.service\";\nimport * as i3 from \"@angular/common\";\nconst _c0 = [\"paginator\"];\n\nfunction TransactionDetailComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"span\")(2, \"b\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \" : \");\n    i0.ɵɵelementStart(5, \"b\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    const item_r1 = ctx.$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(item_r1.key);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(item_r1.value);\n  }\n}\n\nexport let TransactionDetailComponent = /*#__PURE__*/(() => {\n  class TransactionDetailComponent {\n    constructor(route, transactionService, location) {\n      this.route = route;\n      this.transactionService = transactionService;\n      this.location = location;\n      this.displayedColumns = ['id', 'amount', 'balance', 'label', 'date'];\n    }\n\n    ngOnInit() {\n      this.getTransactionById();\n    }\n\n    getTransactionById() {\n      const id = this.route.snapshot.paramMap.get('id');\n      this.transactionService.getTransactionById(id).subscribe(list => {\n        this.transaction = list;\n      });\n    }\n\n    goBack() {\n      this.location.back();\n    }\n\n  }\n\n  TransactionDetailComponent.ɵfac = function TransactionDetailComponent_Factory(t) {\n    return new (t || TransactionDetailComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.TransactionService), i0.ɵɵdirectiveInject(i3.Location));\n  };\n\n  TransactionDetailComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: TransactionDetailComponent,\n    selectors: [[\"app-transaction-detail\"]],\n    viewQuery: function TransactionDetailComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n        i0.ɵɵviewQuery(MatSort, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.paginator = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.sort = _t.first);\n      }\n    },\n    decls: 5,\n    vars: 3,\n    consts: [[\"type\", \"button\", 3, \"click\"], [4, \"ngFor\", \"ngForOf\"]],\n    template: function TransactionDetailComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\")(1, \"button\", 0);\n        i0.ɵɵlistener(\"click\", function TransactionDetailComponent_Template_button_click_1_listener() {\n          return ctx.goBack();\n        });\n        i0.ɵɵtext(2, \"go back\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(3, TransactionDetailComponent_div_3_Template, 7, 2, \"div\", 1);\n        i0.ɵɵpipe(4, \"keyvalue\");\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(4, 1, ctx.transaction));\n      }\n    },\n    dependencies: [i3.NgForOf, i3.KeyValuePipe]\n  });\n  return TransactionDetailComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}