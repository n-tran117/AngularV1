{"ast":null,"code":"import { timer } from 'rxjs';\nimport { map, share } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nexport let ClockComponent = /*#__PURE__*/(() => {\n  class ClockComponent {\n    constructor() {\n      this.date = new Date();\n      this.time = new Date();\n      this.rxTime = new Date();\n    }\n\n    ngOnInit() {\n      // Using Basic Interval\n      this.intervalId = setInterval(() => {\n        this.time = new Date();\n      }, 1000); // Using RxJS Timer\n\n      this.subscription = timer(0, 1000).pipe(map(() => new Date()), share()).subscribe(time => {\n        this.rxTime = time;\n      });\n    }\n\n    ngOnDestroy() {\n      clearInterval(this.intervalId);\n\n      if (this.subscription) {\n        this.subscription.unsubscribe();\n      }\n    }\n\n  }\n\n  ClockComponent.ɵfac = function ClockComponent_Factory(t) {\n    return new (t || ClockComponent)();\n  };\n\n  ClockComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ClockComponent,\n    selectors: [[\"app-clock\"]],\n    decls: 6,\n    vars: 8,\n    template: function ClockComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\");\n        i0.ɵɵtext(1);\n        i0.ɵɵpipe(2, \"date\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"div\");\n        i0.ɵɵtext(4);\n        i0.ɵɵpipe(5, \"date\");\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate1(\"Simple Clock: \", i0.ɵɵpipeBind2(2, 2, ctx.time, \"hh:mm:ss a\"), \"\");\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate1(\"RxJS Clock: \", i0.ɵɵpipeBind2(5, 5, ctx.rxTime, \"hh:mm:ss a\"), \"\");\n      }\n    },\n    dependencies: [i1.DatePipe],\n    styles: [\"(()[_ngcontent-%COMP%]   =[_ngcontent-%COMP%] >  {// webpackBootstrap \\\"use strict\\\";})()[_ngcontent-%COMP%] ;{%BLOCK%}\"]\n  });\n  return ClockComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}